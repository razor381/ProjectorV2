{"version":3,"sources":["../../src/validators/postValidator.js"],"names":["schema","Joi","object","name","string","label","alphanum","min","max","summary","description","image_cover","images","array","items","user_id","number","integer","findPostUser","req","res","next","body","then","catch","err","validatePost","findPost","params","id"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAEA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAEF,aACHG,MADG,GAEHC,KAFG,CAEG,MAFH,EAGHC,QAHG,GAIHC,GAJG,CAIC,CAJD,EAKHC,GALG,CAKC,EALD,CADkB;AAQxBC,EAAAA,OAAO,EAAER,aACNG,MADM,GAENC,KAFM,CAEA,SAFA,EAGNG,GAHM,CAGF,GAHE,CARe;AAaxBE,EAAAA,WAAW,EAAET,aACVG,MADU,GAEVC,KAFU,CAEJ,aAFI,CAbW;AAiBxBM,EAAAA,WAAW,EAAEV,aACVG,MADU,GAEVC,KAFU,CAEJ,aAFI,CAjBW;AAqBxBO,EAAAA,MAAM,EAAEX,aACLY,KADK,GAELC,KAFK,CAECb,aAAIG,MAAJ,EAFD,EAGLC,KAHK,CAGC,QAHD,CArBgB;AA0BxBU,EAAAA,OAAO,EAAEd,aACNe,MADM,GAENC,OAFM,GAGNZ,KAHM,CAGA,SAHA;AA1Be,CAAX,CAAf;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASa,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,SAAO,2BAAQF,GAAG,CAACG,IAAJ,CAASP,OAAjB,EACJQ,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,YAAT,CAAsBP,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,SAAO,uBAASF,GAAG,CAACG,IAAb,EAAmBtB,MAAnB,EACJuB,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,QAAT,CAAkBR,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACvC,SAAO,2BAAQF,GAAG,CAACS,MAAJ,CAAWC,EAAnB,EACJN,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD","sourcesContent":["import Joi from 'joi';\n\nimport validate from '../utils/validate';\nimport { getPost } from '../services/postServices';\nimport { getUser } from '../services/userServices';\n\n// post request body validation schema\nconst schema = Joi.object({\n  name: Joi\n    .string()\n    .label('Name')\n    .alphanum()\n    .min(4)\n    .max(30),\n\n  summary: Joi\n    .string()\n    .label('Summary')\n    .max(100),\n\n  description: Joi\n    .string()\n    .label('Description'),\n\n  image_cover: Joi\n    .string()\n    .label('Image Cover'),\n\n  images: Joi\n    .array()\n    .items(Joi.string())\n    .label('Images'),\n\n  user_id: Joi\n    .number()\n    .integer()\n    .label('User Id'),\n});\n\n/**\n * Validate post creator user existence.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function findPostUser(req, res, next) {\n  return getUser(req.body.user_id)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\n/**\n * Validate create/update Post request.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function validatePost(req, res, next) {\n  return validate(req.body, schema)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\n/**\n * Validate Post existence.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function findPost(req, res, next) {\n  return getPost(req.params.id)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n"],"file":"postValidator.js"}