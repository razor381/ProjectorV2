{"version":3,"sources":["../../src/services/userServices.js"],"names":["getAllUsers","User","fetchAll","getUser","id","fetch","withRelated","then","user","catch","NotFoundError","Boom","notFound","createUser","save","updateUser","deleteUser","destroy"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,WAAT,GAAuB;AAC5B,SAAOC,cAAKC,QAAL,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAC1B,SAAO,IAAIH,aAAJ,CAAS;AAAEG,IAAAA;AAAF,GAAT,EACJC,KADI,CACE;AAAEC,IAAAA,WAAW,EAAE,CAAC,OAAD;AAAf,GADF,EAEJC,IAFI,CAEEC,IAAD,IAAUA,IAFX,EAGJC,KAHI,CAGER,cAAKS,aAHP,EAGsB,MAAM;AAC/B,UAAMC,cAAKC,QAAL,CAAc,4BAAd,CAAN;AACD,GALI,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,UAAT,CAAoBL,IAApB,EAA0B;AAC/B,SAAO,IAAIP,aAAJ,CAASO,IAAT,EAAeM,IAAf,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,UAAT,CAAoBX,EAApB,EAAwBI,IAAxB,EAA8B;AACnC,SAAO,IAAIP,aAAJ,CAAS;AAAEG,IAAAA;AAAF,GAAT,EAAiBU,IAAjB,CAAsBN,IAAtB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASQ,UAAT,CAAoBZ,EAApB,EAAwB;AAC7B,SAAO,IAAIH,aAAJ,CAAS;AAAEG,IAAAA;AAAF,GAAT,EAAiBC,KAAjB,GAAyBE,IAAzB,CAA+BC,IAAD,IAAUA,IAAI,CAACS,OAAL,EAAxC,CAAP;AACD","sourcesContent":["import Boom from '@hapi/boom';\n\nimport User from '../models/user';\n\n/**\n * Get all users.\n *\n * @returns {Promise}\n */\nexport function getAllUsers() {\n  return User.fetchAll();\n}\n\n/**\n * Get user by id.\n *\n * @param {String|Number} id\n * @returns {Promise}\n */\nexport function getUser(id) {\n  return new User({ id })\n    .fetch({ withRelated: ['posts'] })\n    .then((user) => user)\n    .catch(User.NotFoundError, () => {\n      throw Boom.notFound('No user found with give id');\n    });\n}\n\n/**\n * Create new user.\n *\n * @param {Object} user\n * @returns {Promise}\n */\nexport function createUser(user) {\n  return new User(user).save();\n}\n\n/**\n * Update a user.\n *\n * @param {String|Number} id\n * @param {Object} user\n * @returns {Promise}\n */\nexport function updateUser(id, user) {\n  return new User({ id }).save(user);\n}\n\n/**\n * Delete a user.\n *\n * @param {String|Number} id\n * @returns {Promise}\n */\nexport function deleteUser(id) {\n  return new User({ id }).fetch().then((user) => user.destroy());\n}\n"],"file":"userServices.js"}