{"version":3,"sources":["../../src/services/postServices.js"],"names":["getAllPosts","Post","fetchAll","withRelated","getPost","id","fetch","then","post","catch","NotFoundError","Boom","notFound","createPost","save","updatePost","deletePost","destroy"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,WAAT,GAAuB;AAC5B,SAAOC,cAAKC,QAAL,CAAc;AAAEC,IAAAA,WAAW,EAAE,CAAC,MAAD;AAAf,GAAd,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAC1B,SAAO,IAAIJ,aAAJ,CAAS;AAAEI,IAAAA;AAAF,GAAT,EACJC,KADI,CACE;AAAEH,IAAAA,WAAW,EAAE,CAAC,MAAD;AAAf,GADF,EAEJI,IAFI,CAEEC,IAAD,IAAUA,IAFX,EAGJC,KAHI,CAGER,cAAKS,aAHP,EAGsB,MAAM;AAC/B,UAAMC,cAAKC,QAAL,CAAc,6BAAd,CAAN;AACD,GALI,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,UAAT,CAAoBL,IAApB,EAA0B;AAC/B,SAAO,IAAIP,aAAJ,CAASO,IAAT,EAAeM,IAAf,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,UAAT,CAAoBV,EAApB,EAAwBG,IAAxB,EAA8B;AACnC,SAAO,IAAIP,aAAJ,CAAS;AAAEI,IAAAA;AAAF,GAAT,EAAiBS,IAAjB,CAAsBN,IAAtB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASQ,UAAT,CAAoBX,EAApB,EAAwB;AAC7B,SAAO,IAAIJ,aAAJ,CAAS;AAAEI,IAAAA;AAAF,GAAT,EAAiBC,KAAjB,GAAyBC,IAAzB,CAA+BC,IAAD,IAAUA,IAAI,CAACS,OAAL,EAAxC,CAAP;AACD","sourcesContent":["import Boom from '@hapi/boom';\n\nimport Post from '../models/post';\n\n/**\n * Get all posts.\n *\n * @returns {Promise}\n */\nexport function getAllPosts() {\n  return Post.fetchAll({ withRelated: ['user'] });\n}\n\n/**\n * Get post by id.\n *\n * @param {String|Number} id\n * @returns {Promise}\n */\nexport function getPost(id) {\n  return new Post({ id })\n    .fetch({ withRelated: ['user'] })\n    .then((post) => post)\n    .catch(Post.NotFoundError, () => {\n      throw Boom.notFound('No post found with given Id');\n    });\n}\n\n/**\n * Create new post.\n *\n * @param {Object} post\n * @returns {Promise}\n */\nexport function createPost(post) {\n  return new Post(post).save();\n}\n\n/**\n * Update a post.\n *\n * @param {String|Number} id\n * @param {Object} post\n * @returns {Promise}\n */\nexport function updatePost(id, post) {\n  return new Post({ id }).save(post);\n}\n\n/**\n * Delete a post.\n *\n * @param {String|Number} id\n * @returns {Promise}\n */\nexport function deletePost(id) {\n  return new Post({ id }).fetch().then((post) => post.destroy());\n}\n"],"file":"postServices.js"}