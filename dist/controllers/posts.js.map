{"version":3,"sources":["../../src/controllers/posts.js"],"names":["fetchAll","req","res","next","postServices","getAllPosts","then","data","json","catch","err","fetchById","getPost","params","id","create","createPost","body","status","HttpStatus","CREATED","update","updatePost","remove","deletePost","NO_CONTENT"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACvCC,EAAAA,YAAY,CACTC,WADH,GAEGC,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,SAAT,CAAmBV,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACxCC,EAAAA,YAAY,CACTQ,OADH,CACWX,GAAG,CAACY,MAAJ,CAAWC,EADtB,EAEGR,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASK,MAAT,CAAgBd,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,EAAAA,YAAY,CACTY,UADH,CACcf,GAAG,CAACgB,IADlB,EAEGX,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACgB,MAAJ,CAAWC,yBAAWC,OAAtB,EAA+BZ,IAA/B,CAAoC;AAAED,IAAAA;AAAF,GAApC,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASW,MAAT,CAAgBpB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,EAAAA,YAAY,CACTkB,UADH,CACcrB,GAAG,CAACY,MAAJ,CAAWC,EADzB,EAC6Bb,GAAG,CAACgB,IADjC,EAEGX,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASa,MAAT,CAAgBtB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,EAAAA,YAAY,CACToB,UADH,CACcvB,GAAG,CAACY,MAAJ,CAAWC,EADzB,EAEGR,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACgB,MAAJ,CAAWC,yBAAWM,UAAtB,EAAkCjB,IAAlC,CAAuC;AAAED,IAAAA;AAAF,GAAvC,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID","sourcesContent":["import HttpStatus from 'http-status-codes';\n\nimport * as postServices from '../services/postServices';\n\n/**\n * Get all posts.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function fetchAll(req, res, next) {\n  postServices\n    .getAllPosts()\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Get post by id.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function fetchById(req, res, next) {\n  postServices\n    .getPost(req.params.id)\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Create new post.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function create(req, res, next) {\n  postServices\n    .createPost(req.body)\n    .then((data) => res.status(HttpStatus.CREATED).json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Update a post.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function update(req, res, next) {\n  postServices\n    .updatePost(req.params.id, req.body)\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Delete a post.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function remove(req, res, next) {\n  postServices\n    .deletePost(req.params.id)\n    .then((data) => res.status(HttpStatus.NO_CONTENT).json({ data }))\n    .catch((err) => next(err));\n}\n"],"file":"posts.js"}